apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.yhq.marvel"
        minSdkVersion min_sdk_version
        targetSdkVersion sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding = true
    }

    flavorDimensions "mode"
    productFlavors {
        mock {
            dimension "mode"

            versionNameSuffix '- Mock'
            applicationIdSuffix ".mock"

            buildConfigField ("String", "URL_HOST", '""')
            buildConfigField ("String", "MARVEL_PUBLIC_KEY", '""')
            buildConfigField ("String", "MARVEL_PRIVATE_KEY", '""')

        }

        dev {
            dimension "mode"

            versionNameSuffix '- Dev'
            applicationIdSuffix ".dev"

            buildConfigField ("String", "URL_HOST", '"https://gateway.marvel.com:443"')
            buildConfigField ("String", "MARVEL_PUBLIC_KEY", '"08a50cfc5ca9ce5480e3b0730159f529"')
            buildConfigField ("String", "MARVEL_PRIVATE_KEY", '"21f7f1dff344c996a64632aafc0d278efca94048"')

        }

    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayout_version"

    //DI
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Retrofit and parsing
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    //Testing
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "androidx.test.ext:truth:$truth_version"
    testImplementation "androidx.arch.core:core-testing:$archTest_version"


}
